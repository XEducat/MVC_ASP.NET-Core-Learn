@using MVC_ASP.NET_Core_Learn.Data.Enums
@using MVC_ASP.NET_Core_Learn.Data.Extensions
@model MVC_ASP.NET_Core_Learn.ViewModels.EditDepositViewModel

@{
    // Отримуємо всі значення перерахування InterestPayment
    var enumValues = Enum.GetValues(typeof(InterestPayment)).Cast<InterestPayment>();

    // Перетворюємо кожне значення перерахування на об'єкт SelectListItem
    var interestRates = enumValues.Select(e => new SelectListItem
    {
        Value = e.ToString(),
        Text = e.GetDescription()
    });
}


<div id="main" class="wrapper style1">
    <div class="container">
        @using (Html.BeginForm("Create", "DepositTemplate", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            @if (TempData["Error"] != null)
            {
                <br />
                <div class="col-md-12 alert alert-danger">
                    <span class="text-danger fw-bold">@TempData["Error"] </span>
                </div>
            }
            <div class="form-group">
                @Html.LabelFor(model => model.Title)
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ShortDescription)
                @Html.EditorFor(model => model.ShortDescription, new { htmlAttributes = new { @class = "form-control", placeholder = "ShortDescription" } })
                @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <input asp-for="Replenishment" class="form-control">
                <label asp-for="Replenishment"></label>
                <span asp-validation-for="Replenishment" class="text-danger"></span>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.InterestRate)
                @Html.DropDownListFor(model => model.InterestRate, interestRates, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.InterestRate, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Terms)
                <div id="term-list-container">
                    <!-- Тут відображатимуться поля для введення термінів -->
                    @for (int i = 0; i < Model?.Terms?.Count; i++)
                    {
                        <div>
                            @Html.HiddenFor(model => model.Terms[i].Id)
                            @Html.TextBoxFor(model => model.Terms[i].NumberMonths, new { @class = "term-input", type = "number" })
                        </div>
                    }
                    @* @Html.ValidationMessageFor(model => model.Terms, "", new { @class = "text-danger" }) *@

                </div>
            </div>
            <button type="button" class="btn btn-success" id="add-term-button">+</button>
            <button type="button" class="btn btn-danger" id="remove-term-button">-</button>

            <div class="form-group">
                @Html.LabelFor(model => model.InterestRateNoEarlyClosure)
                @Html.EditorFor(model => model.InterestRateNoEarlyClosure, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.InterestRateNoEarlyClosure, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.InterestRateEarlyClosure)
                @Html.EditorFor(model => model.InterestRateEarlyClosure, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.InterestRateEarlyClosure, "", new { @class = "text-danger" })
            </div>

            <button type="submit" class="button primary">Submit</button>
        }
    </div>
</div>

<!-- Шаблон текстового поля -->
<template id="input-template">
    <div class="form-group">
        <input type="number" class="term-input" name="terms[newIndex].NumberMonths" />
    </div>
</template>

<!-- Скрипт для додавання та видалення термінів -->
<script src="/js/term-interactions.js"></script>